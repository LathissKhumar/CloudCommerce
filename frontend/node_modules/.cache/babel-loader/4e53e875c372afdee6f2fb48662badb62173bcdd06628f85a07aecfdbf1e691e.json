{"ast":null,"code":"import React,{useEffect,useState}from'react';import Loader from'./Loader';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function EditOrder(_ref){let{orderId}=_ref;const[order,setOrder]=useState(null);const[status,setStatus]=useState('pending');const[success,setSuccess]=useState('');const[error,setError]=useState('');useEffect(()=>{axios.get(\"/api/orders/\".concat(orderId)).then(res=>{setOrder(res.data);setStatus(res.data.status);}).catch(()=>{setError('Failed to fetch order');setOrder(null);});},[orderId]);const handleSubmit=async e=>{e.preventDefault();try{await axios.put(\"/api/orders/\".concat(orderId),{status});setSuccess('Order updated!');setError('');}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||'Failed to update order');setSuccess('');}};if(!order&&!error)return/*#__PURE__*/_jsx(Loader,{});return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Order\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red',margin:0},children:error}),/*#__PURE__*/_jsxs(\"select\",{value:status,onChange:e=>setStatus(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Completed\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cancelled\",children:\"Cancelled\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Update\"}),success&&/*#__PURE__*/_jsx(\"p\",{style:{color:'green',margin:0},children:success})]});}export default EditOrder;","map":{"version":3,"names":["React","useEffect","useState","Loader","axios","jsx","_jsx","jsxs","_jsxs","EditOrder","_ref","orderId","order","setOrder","status","setStatus","success","setSuccess","error","setError","get","concat","then","res","data","catch","handleSubmit","e","preventDefault","put","err","_err$response","_err$response$data","response","onSubmit","children","style","color","margin","value","onChange","target","type"],"sources":["D:/VSCode/CloudCommerce/frontend/src/components/EditOrder.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Loader from './Loader';\r\nimport axios from 'axios';\r\n\r\nfunction EditOrder({ orderId }) {\r\n  const [order, setOrder] = useState(null);\r\n  const [status, setStatus] = useState('pending');\r\n  const [success, setSuccess] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/orders/${orderId}`)\r\n      .then(res => {\r\n        setOrder(res.data);\r\n        setStatus(res.data.status);\r\n      })\r\n      .catch(() => {\r\n        setError('Failed to fetch order');\r\n        setOrder(null);\r\n      });\r\n  }, [orderId]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.put(`/api/orders/${orderId}`, { status });\r\n      setSuccess('Order updated!');\r\n      setError('');\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to update order');\r\n      setSuccess('');\r\n    }\r\n  };\r\n\r\n  if (!order && !error) return <Loader />;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Edit Order</h2>\r\n      {error && <p style={{color: 'red', margin: 0}}>{error}</p>}\r\n      <select value={status} onChange={e => setStatus(e.target.value)}>\r\n        <option value=\"pending\">Pending</option>\r\n        <option value=\"completed\">Completed</option>\r\n        <option value=\"cancelled\">Cancelled</option>\r\n      </select>\r\n      <button type=\"submit\">Update</button>\r\n      {success && <p style={{color: 'green', margin: 0}}>{success}</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default EditOrder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}